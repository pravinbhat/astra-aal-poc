datastax-java-driver.advanced {
  
  protocol.compression = lz4 // or snappy
  
  metrics {
    session.enabled = [ connected-nodes, cql-requests ]
    node.enabled = [ pool.open-connections, pool.in-flight, pool.available-streams, 
    bytes-sent, bytes-received, cql-messages, speculative-executions, 
    errors.request.aborted, errors.request.read-timeouts, errors.request.write-timeouts, 
    errors.request.unavailables, errors.request.others, retries.total, ignores.total]
  }
  
  request-tracker {
    classes = [RequestLogger]
    logs {
    # Whether to log successful requests.
    success.enabled = true

    slow {
      # The threshold to classify a successful request as "slow". If this is unset, all
      # successful requests will be considered as normal.
      threshold = 1 second

      # Whether to log slow requests.
      enabled = true
    }

    # Whether to log failed requests.
    error.enabled = true

    # The maximum length of the query string in the log message. If it is longer than that, it
    # will be truncated.
    max-query-length = 500

    # Whether to log bound values in addition to the query string.
    show-values = true

    # The maximum length for bound values in the log message. If the formatted representation of
    # a value is longer than that, it will be truncated.
    max-value-length = 50

    # The maximum number of bound values to log. If a request has more values, the list of
    # values will be truncated.
    max-values = 50

    # Whether to log stack traces for failed queries. If this is disabled, the log will just
    # include the exception's string representation (generally the class name and message).
    show-stack-traces = true
  } 
}